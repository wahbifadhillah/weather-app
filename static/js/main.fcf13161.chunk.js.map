{"version":3,"sources":["components/weather/styles.module.scss","components/weather/svg/01d.svg","components/weather/svg/01n.svg","components/weather/svg/02d.svg","components/weather/svg/02n.svg","components/weather/svg/03d.svg","components/weather/svg/03n.svg","components/weather/svg/04d.svg","components/weather/svg/04n.svg","components/weather/svg/09d.svg","components/weather/svg/09n.svg","components/weather/svg/10d.svg","components/weather/svg/10n.svg","components/weather/svg/11d.svg","components/weather/svg/11n.svg","components/weather/svg/13d.svg","components/weather/svg/13n.svg","components/weather/svg/50d.svg","components/weather/svg/50n.svg","components/weather/weather.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","daycolor","hour","styles","latenight","night","evening","afternoon","noon","morning","earlymorning","midnight","iconpicker","icon","clearskyd","clearskyn","fewcloudsd","fewcloudsn","scatteredcloudsd","scatteredcloudsn","brokencloudsd","brokencloudsn","showerraind","showerrainn","raind","rainn","thunderstormd","thunderstormn","snowd","snown","mistd","mistn","console","log","refresh","window","location","reload","WeatherCard","weatherData","iconcode","weather","moment","className","wrapper","card","city","name","dawndusk","sunrise","sys","format","sunset","temp","main","weathername","dayData","day","date","time","refreshBtn","onClick","App","useState","lat","setLat","long","setLong","data","setData","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","then","res","json","result","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,yBAAyB,KAAO,qBAAqB,KAAO,qBAAqB,SAAW,yBAAyB,KAAO,qBAAqB,YAAc,4BAA4B,QAAU,wBAAwB,aAAe,6BAA6B,QAAU,wBAAwB,KAAO,qBAAqB,UAAY,0BAA0B,QAAU,wBAAwB,MAAQ,sBAAsB,UAAY,0BAA0B,QAAU,wBAAwB,UAAY,0BAA0B,UAAY,0BAA0B,WAAa,2BAA2B,WAAa,2BAA2B,iBAAmB,iCAAiC,iBAAmB,iCAAiC,cAAgB,8BAA8B,cAAgB,8BAA8B,YAAc,4BAA4B,YAAc,4BAA4B,MAAQ,sBAAsB,MAAQ,sBAAsB,cAAgB,8BAA8B,cAAgB,8BAA8B,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,sBAAsB,QAAU,wBAAwB,WAAa,6B,8LCDxxC,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,I,MCyBTC,EAAW,SAAAC,GACb,OAAIA,GAAQ,GACDC,IAAOC,UAEdF,GAAQ,GACDC,IAAOE,MAEdH,GAAQ,GACDC,IAAOG,QAEdJ,GAAQ,GACDC,IAAOI,UAEdL,GAAQ,EACDC,IAAOK,KAEdN,GAAQ,EACDC,IAAOM,QAEdP,GAAQ,EACDC,IAAOO,aAEdR,GAAQ,EACDC,IAAOQ,cADlB,GAKEC,EAAa,SAAAC,GACf,OAAOA,GACH,IAAK,MAAM,OAAOV,IAAOW,UACzB,IAAK,MAAM,OAAOX,IAAOY,UACzB,IAAK,MAAM,OAAOZ,IAAOa,WACzB,IAAK,MAAM,OAAOb,IAAOc,WACzB,IAAK,MAAM,OAAOd,IAAOe,iBACzB,IAAK,MAAM,OAAOf,IAAOgB,iBACzB,IAAK,MAAM,OAAOhB,IAAOiB,cACzB,IAAK,MAAM,OAAOjB,IAAOkB,cACzB,IAAK,MAAM,OAAOlB,IAAOmB,YACzB,IAAK,MAAM,OAAOnB,IAAOoB,YACzB,IAAK,MAAM,OAAOpB,IAAOqB,MACzB,IAAK,MAAM,OAAOrB,IAAOsB,MACzB,IAAK,MAAM,OAAOtB,IAAOuB,cACzB,IAAK,MAAM,OAAOvB,IAAOwB,cACzB,IAAK,MAAM,OAAOxB,IAAOyB,MACzB,IAAK,MAAM,OAAOzB,IAAO0B,MACzB,IAAK,MAAM,OAAO1B,IAAO2B,MACzB,IAAK,MAAM,OAAO3B,IAAO4B,MACzB,QAAQC,QAAQC,IAAI,iBAAkBpB,KAIxCqB,EAAU,WACZC,OAAOC,SAASC,UA0CLC,EAvCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACZC,EAAWD,EAAYE,QAAQ,GAAG5B,KAElCX,EAAOwC,MAASxC,OAEtB,OADA8B,QAAQC,IAAIhC,EAASC,IAEjB,qBAAKyC,UAAS,UAAKxC,IAAOyC,QAAZ,YAAuB3C,EAASC,IAA9C,SACI,sBAAKyC,UAAWxC,IAAO0C,KAAvB,UACI,qBAAKF,UAAWxC,IAAO2C,KAAvB,SACKP,EAAYQ,OAEjB,sBAAKJ,UAAWxC,IAAO6C,SAAvB,UACI,sBAAKL,UAAWxC,IAAO8C,QAAvB,sBAA0CP,IAA+B,IAAxBH,EAAYW,IAAID,SAAcE,OAAO,SACtF,sBAAKR,UAAWxC,IAAOiD,OAAvB,qBAAwCV,IAA8B,IAAvBH,EAAYW,IAAIE,QAAaD,OAAO,YAEvF,qBAAKR,UAAS,UAAKxC,IAAOsC,QAAZ,YAAuB7B,EAAW4B,MAKhD,sBAAKG,UAAWxC,IAAOkD,KAAvB,UACKd,EAAYe,KAAKD,KADtB,YAGA,qBAAKV,UAAWxC,IAAOoD,YAAvB,SACKhB,EAAYE,QAAQ,GAAGa,OAE5B,sBAAKX,UAAWxC,IAAOqD,QAAvB,UACI,qBAAKb,UAAWxC,IAAOsD,IAAvB,SAA6Bf,MAASS,OAAO,SADjD,IAEI,qBAAKR,UAAWxC,IAAOuD,KAAvB,SAA8BhB,MAASS,OAAO,WAFlD,IAGI,qBAAKR,UAAWxC,IAAOwD,KAAvB,SAA8BjB,MAASS,OAAO,WAElD,qBAAKR,UAAWxC,IAAO+B,QAAvB,SACI,wBAAQS,UAAWxC,IAAOyD,WAAYC,QAAS3B,EAA/C,6B,MC5GL,SAAS4B,IAEtB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,sBAAAC,EAAA,6DAChBC,UAAUC,YAAYC,oBAAmB,SAASC,GAChDX,EAAOW,EAASC,OAAOC,UACvBX,EAAQS,EAASC,OAAOE,cAHV,SAMVC,MAAM,GAAD,OAAIC,0CAAJ,yBAAkDjB,EAAlD,gBAA6DE,EAA7D,+BAAwFe,qCAClGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhB,EAAQgB,MATM,2CAAH,qDAYfd,MACC,CAACP,EAAIE,IAGN,qBAAKoB,GAAG,MAAR,SACwB,oBAAblB,EAAKd,KACZ,cAAC,EAAD,CAASf,YAAa6B,IAEtB,sBAAKzB,UAAU,aAAf,UAA4B,wBAAW,6BC/B/C,IAYe4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcf13161.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__32SMc\",\"midnight\":\"styles_midnight__16q_l\",\"card\":\"styles_card__3rJyF\",\"city\":\"styles_city__2Ptyb\",\"dawndusk\":\"styles_dawndusk__3PNh0\",\"temp\":\"styles_temp__-AIhT\",\"weathername\":\"styles_weathername__DOS4e\",\"dayData\":\"styles_dayData__2WxpU\",\"earlymorning\":\"styles_earlymorning__360hp\",\"morning\":\"styles_morning__16pcs\",\"noon\":\"styles_noon__3kf8g\",\"afternoon\":\"styles_afternoon__1WmBd\",\"evening\":\"styles_evening__1sXQD\",\"night\":\"styles_night__1bP8E\",\"latenight\":\"styles_latenight__1K5NH\",\"weather\":\"styles_weather__2OnFa\",\"clearskyd\":\"styles_clearskyd__BfBLh\",\"clearskyn\":\"styles_clearskyn__22gu6\",\"fewcloudsd\":\"styles_fewcloudsd__20cQ2\",\"fewcloudsn\":\"styles_fewcloudsn__3CaHX\",\"scatteredcloudsd\":\"styles_scatteredcloudsd__3GS-u\",\"scatteredcloudsn\":\"styles_scatteredcloudsn__3L0LB\",\"brokencloudsd\":\"styles_brokencloudsd__1vNce\",\"brokencloudsn\":\"styles_brokencloudsn__yuUGb\",\"showerraind\":\"styles_showerraind__1UVGR\",\"showerrainn\":\"styles_showerrainn__23inp\",\"raind\":\"styles_raind__3m9KP\",\"rainn\":\"styles_rainn__1QcDQ\",\"thunderstormd\":\"styles_thunderstormd__CWdi-\",\"thunderstormn\":\"styles_thunderstormn__16cJM\",\"snowd\":\"styles_snowd__2dn5Q\",\"snown\":\"styles_snown__BtUcB\",\"mistd\":\"styles_mistd__3B0Y5\",\"mistn\":\"styles_mistn__1tQ-f\",\"refresh\":\"styles_refresh__u-i-5\",\"refreshBtn\":\"styles_refreshBtn__32TY_\"};","export default __webpack_public_path__ + \"static/media/01d.fa2a1381.svg\";","export default __webpack_public_path__ + \"static/media/01n.4069f815.svg\";","export default __webpack_public_path__ + \"static/media/02d.5e959642.svg\";","export default __webpack_public_path__ + \"static/media/02n.0d3f10df.svg\";","export default __webpack_public_path__ + \"static/media/03d.1701d316.svg\";","export default __webpack_public_path__ + \"static/media/03n.1701d316.svg\";","export default __webpack_public_path__ + \"static/media/04d.1701d316.svg\";","export default __webpack_public_path__ + \"static/media/04n.1701d316.svg\";","export default __webpack_public_path__ + \"static/media/09d.5083141e.svg\";","export default __webpack_public_path__ + \"static/media/09n.5083141e.svg\";","export default __webpack_public_path__ + \"static/media/10d.ac942f77.svg\";","export default __webpack_public_path__ + \"static/media/10n.77e5b507.svg\";","export default __webpack_public_path__ + \"static/media/11d.28dfc61b.svg\";","export default __webpack_public_path__ + \"static/media/11n.28dfc61b.svg\";","export default __webpack_public_path__ + \"static/media/13d.d25aad80.svg\";","export default __webpack_public_path__ + \"static/media/13n.d25aad80.svg\";","export default __webpack_public_path__ + \"static/media/50d.7fa932a8.svg\";","export default __webpack_public_path__ + \"static/media/50n.7fa932a8.svg\";","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport moment from 'moment';\r\n\r\nimport clearskyd from './svg/01d.svg';\r\nimport clearskyn from './svg/01n.svg';\r\nimport fewcloudsd from './svg/02d.svg';\r\nimport fewcloudsn from './svg/02n.svg';\r\nimport scatteredcloudsd from './svg/03d.svg';\r\nimport scatteredcloudsn from './svg/03n.svg';\r\nimport brokencloudsd from './svg/04d.svg';\r\nimport brokencloudsn from './svg/04n.svg';\r\nimport showerraind from './svg/09d.svg';\r\nimport showerrainn from './svg/09n.svg';\r\nimport raind from './svg/10d.svg';\r\nimport rainn from './svg/10n.svg';\r\nimport thunderstormd from './svg/11d.svg';\r\nimport thunderstormn from './svg/11n.svg';\r\nimport snowd from './svg/13d.svg';\r\nimport snown from './svg/13n.svg';\r\nimport mistd from './svg/50d.svg';\r\nimport mistn from './svg/50n.svg';\r\n// import { ReactComponent as ClearSky } from './svg/01n.svg';\r\n// import Weathericon from '../weathericon/weathericon';\r\n\r\nconst daycolor = hour => {\r\n    if (hour >= 21){\r\n        return styles.latenight;\r\n    }\r\n    if (hour >= 18){\r\n        return styles.night;\r\n    }\r\n    if (hour >= 15){\r\n        return styles.evening;\r\n    }\r\n    if (hour >= 12){\r\n        return styles.afternoon;\r\n    }\r\n    if (hour >= 9){\r\n        return styles.noon;\r\n    }\r\n    if (hour >= 6){\r\n        return styles.morning;\r\n    }\r\n    if (hour >= 3){\r\n        return styles.earlymorning;\r\n    }\r\n    if (hour >= 0){\r\n        return styles.midnight;\r\n    }\r\n}\r\n\r\nconst iconpicker = icon => {\r\n    switch(icon){\r\n        case '01d':return styles.clearskyd;break;\r\n        case '01n':return styles.clearskyn;break;\r\n        case '02d':return styles.fewcloudsd;break;\r\n        case '02n':return styles.fewcloudsn;break;\r\n        case '03d':return styles.scatteredcloudsd;break;\r\n        case '03n':return styles.scatteredcloudsn;break;\r\n        case '04d':return styles.brokencloudsd;break;\r\n        case '04n':return styles.brokencloudsn;break;\r\n        case '09d':return styles.showerraind;break;\r\n        case '09n':return styles.showerrainn;break;\r\n        case '10d':return styles.raind;break;\r\n        case '10n':return styles.rainn;break;\r\n        case '11d':return styles.thunderstormd;break;\r\n        case '11n':return styles.thunderstormn;break;\r\n        case '13d':return styles.snowd;break;\r\n        case '13n':return styles.snown;break;\r\n        case '50d':return styles.mistd;break;\r\n        case '50n':return styles.mistn;break;\r\n        default:console.log('icon not found', icon);\r\n    }\r\n}\r\n\r\nconst refresh = () => {\r\n    window.location.reload();\r\n  }\r\n\r\nconst WeatherCard = ({weatherData}) => {\r\n    const iconcode = weatherData.weather[0].icon;\r\n    const iconurl = \"http://openweathermap.org/img/wn/\" + iconcode + \"@4x.png\";\r\n    const hour = moment().hour();\r\n    console.log(daycolor(hour));\r\n    return(\r\n        <div className={`${styles.wrapper} ${daycolor(hour)}`}>\r\n            <div className={styles.card}>    \r\n                <div className={styles.city}>\r\n                    {weatherData.name}\r\n                </div>\r\n                <div className={styles.dawndusk}>\r\n                    <div className={styles.sunrise}>Sunrise: {moment(weatherData.sys.sunrise*1000).format('LT')}</div>\r\n                    <div className={styles.sunset}>Sunset: {moment(weatherData.sys.sunset*1000).format('LT')}</div>\r\n                </div>\r\n                <div className={`${styles.weather} ${iconpicker(iconcode)}`}>\r\n                    {/* <div className={iconpicker(iconcode)}></div> */}\r\n                    {/* <img className={styles.weathericon} src={iconpicker(iconcode)} alt=\"Weather icon\"/> */}\r\n                    {/* <ClearSky fill='red'/> */}\r\n                </div>\r\n                <div className={styles.temp}>\r\n                    {weatherData.main.temp} &deg;C\r\n                </div>\r\n                <div className={styles.weathername}>\r\n                    {weatherData.weather[0].main}\r\n                </div>\r\n                <div className={styles.dayData}>\r\n                    <div className={styles.day}>{moment().format('ddd')}</div>|\r\n                    <div className={styles.date}>{moment().format('MMM D')}</div>|\r\n                    <div className={styles.time}>{moment().format('LT')}</div>\r\n                </div>\r\n                <div className={styles.refresh}>\r\n                    <button className={styles.refreshBtn} onClick={refresh}>Refresh</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherCard;","import React, { useEffect, useState } from \"react\";\nimport Weather from './components/weather/weather';\nimport './App.css';\n\nexport default function App() {\n  \n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n      .then(res => res.json())\n      .then(result => {\n        setData(result)\n      });\n    }\n    fetchData();\n  }, [lat,long])\n  \n  return (\n    <div id=\"App\">\n      {(typeof data.main != 'undefined') ? (\n        <Weather weatherData={data}/>\n      ): (\n        <div className=\"lds-ripple\"><div></div><div></div></div>\n      )}\n      \n    </div>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}